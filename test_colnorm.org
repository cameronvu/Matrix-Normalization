#+TITLE: colnorm_print / colnorm_benchmark Valgrind Checks
#+TESTY: USE_VALGRIND='1'
#+TESTY: PREFIX='prob2'

* colnorm_print 4 4 1
Checks if colnorm_print on a matrix with 1 thread produces correct
output.

#+TESTY: program='./colnorm_print 4 4 1'
#+BEGIN_SRC sh
==== Matrix Column Normalization Print ====
rows: 4  cols: 4  threads: 1
Matrix:
4 x 4 matrix
   0:  -6.00  -9.00   1.00   2.00 
   1:  -6.00  -5.00   6.00   0.00 
   2:   9.00   6.00  -5.00   4.00 
   3:  -3.00  -2.00   2.00 -10.00 

========== avg ==========
[ i]:     BASE     OPTM
[ 0]:  -1.5000  -1.5000 
[ 1]:  -2.5000  -2.5000 
[ 2]:   1.0000   1.0000 
[ 3]:  -1.0000  -1.0000 
========== std ==========
[ i]:     BASE     OPTM
[ 0]:   6.1847   6.1847 
[ 1]:   5.5000   5.5000 
[ 2]:   3.9370   3.9370 
[ 3]:   5.3852   5.3852 
========== mat ==========
[ i][ j]:     BASE     OPTM
[ 0][ 0]:  -0.7276  -0.7276 
[ 0][ 1]:  -1.1818  -1.1818 
[ 0][ 2]:   0.0000   0.0000 
[ 0][ 3]:   0.5571   0.5571 
[ 1][ 0]:  -0.7276  -0.7276 
[ 1][ 1]:  -0.4545  -0.4545 
[ 1][ 2]:   1.2700   1.2700 
[ 1][ 3]:   0.1857   0.1857 
[ 2][ 0]:   1.6977   1.6977 
[ 2][ 1]:   1.5455   1.5455 
[ 2][ 2]:  -1.5240  -1.5240 
[ 2][ 3]:   0.9285   0.9285 
[ 3][ 0]:  -0.2425  -0.2425 
[ 3][ 1]:   0.0909   0.0909 
[ 3][ 2]:   0.2540   0.2540 
[ 3][ 3]:  -1.6713  -1.6713 
#+END_SRC

* colnorm_print 5 7 1
Checks if colnorm_print on a matrix with 1 thread produces correct
output.

#+TESTY: program='./colnorm_print 5 7 1'
#+BEGIN_SRC sh
==== Matrix Column Normalization Print ====
rows: 5  cols: 7  threads: 1
Matrix:
5 x 7 matrix
   0:  -6.00  -9.00   1.00   2.00  -6.00  -5.00   6.00 
   1:   0.00   9.00   6.00  -5.00   4.00  -3.00  -2.00 
   2:   2.00 -10.00  -3.00   7.00  -5.00   4.00   7.00 
   3: -10.00  -4.00  -7.00  -4.00   9.00   1.00   7.00 
   4:  -8.00   4.00   3.00  -8.00  -7.00   2.00   8.00 

========== avg ==========
[ i]:     BASE     OPTM
[ 0]:  -4.4000  -4.4000 
[ 1]:  -2.0000  -2.0000 
[ 2]:   0.0000   0.0000 
[ 3]:  -1.6000  -1.6000 
[ 4]:  -1.0000  -1.0000 
[ 5]:  -0.2000  -0.2000 
[ 6]:   5.2000   5.2000 
========== std ==========
[ i]:     BASE     OPTM
[ 0]:   4.6303   4.6303 
[ 1]:   7.4027   7.4027 
[ 2]:   4.5607   4.5607 
[ 3]:   5.3889   5.3889 
[ 4]:   6.3561   6.3561 
[ 5]:   3.3106   3.3106 
[ 6]:   3.6551   3.6551 
========== mat ==========
[ i][ j]:     BASE     OPTM
[ 0][ 0]:  -0.3455  -0.3455 
[ 0][ 1]:  -0.9456  -0.9456 
[ 0][ 2]:   0.2193   0.2193 
[ 0][ 3]:   0.6680   0.6680 
[ 0][ 4]:  -0.7866  -0.7866 
[ 0][ 5]:  -1.4499  -1.4499 
[ 0][ 6]:   0.2189   0.2189 
[ 1][ 0]:   0.9503   0.9503 
[ 1][ 1]:   1.4859   1.4859 
[ 1][ 2]:   1.3156   1.3156 
[ 1][ 3]:  -0.6309  -0.6309 
[ 1][ 4]:   0.7866   0.7866 
[ 1][ 5]:  -0.8458  -0.8458 
[ 1][ 6]:  -1.9698  -1.9698 
[ 2][ 0]:   1.3822   1.3822 
[ 2][ 1]:  -1.0807  -1.0807 
[ 2][ 2]:  -0.6578  -0.6578 
[ 2][ 3]:   1.5959   1.5959 
[ 2][ 4]:  -0.6293  -0.6293 
[ 2][ 5]:   1.2687   1.2687 
[ 2][ 6]:   0.4925   0.4925 
[ 3][ 0]:  -1.2094  -1.2094 
[ 3][ 1]:  -0.2702  -0.2702 
[ 3][ 2]:  -1.5349  -1.5349 
[ 3][ 3]:  -0.4454  -0.4454 
[ 3][ 4]:   1.5733   1.5733 
[ 3][ 5]:   0.3625   0.3625 
[ 3][ 6]:   0.4925   0.4925 
[ 4][ 0]:  -0.7775  -0.7775 
[ 4][ 1]:   0.8105   0.8105 
[ 4][ 2]:   0.6578   0.6578 
[ 4][ 3]:  -1.1876  -1.1876 
[ 4][ 4]:  -0.9440  -0.9440 
[ 4][ 5]:   0.6645   0.6645 
[ 4][ 6]:   0.7660   0.7660 
#+END_SRC

* colnorm_print 7 3 1
Checks if colnorm_print on a matrix with 1 thread produces correct
output.

#+TESTY: program='./colnorm_print 7 3 1'
#+BEGIN_SRC sh
==== Matrix Column Normalization Print ====
rows: 7  cols: 3  threads: 1
Matrix:
7 x 3 matrix
   0:  -6.00  -9.00   1.00 
   1:   2.00  -6.00  -5.00 
   2:   6.00   0.00   9.00 
   3:   6.00  -5.00   4.00 
   4:  -3.00  -2.00   2.00 
   5: -10.00  -3.00   7.00 
   6:  -5.00   4.00   7.00 

========== avg ==========
[ i]:     BASE     OPTM
[ 0]:  -1.4286  -1.4286 
[ 1]:  -3.0000  -3.0000 
[ 2]:   3.5714   3.5714 
========== std ==========
[ i]:     BASE     OPTM
[ 0]:   5.7534   5.7534 
[ 1]:   3.9279   3.9279 
[ 2]:   4.4032   4.4032 
========== mat ==========
[ i][ j]:     BASE     OPTM
[ 0][ 0]:  -0.7946  -0.7946 
[ 0][ 1]:  -1.5275  -1.5275 
[ 0][ 2]:  -0.5840  -0.5840 
[ 1][ 0]:   0.5959   0.5959 
[ 1][ 1]:  -0.7638  -0.7638 
[ 1][ 2]:  -1.9467  -1.9467 
[ 2][ 0]:   1.2912   1.2912 
[ 2][ 1]:   0.7638   0.7638 
[ 2][ 2]:   1.2329   1.2329 
[ 3][ 0]:   1.2912   1.2912 
[ 3][ 1]:  -0.5092  -0.5092 
[ 3][ 2]:   0.0973   0.0973 
[ 4][ 0]:  -0.2731  -0.2731 
[ 4][ 1]:   0.2546   0.2546 
[ 4][ 2]:  -0.3569  -0.3569 
[ 5][ 0]:  -1.4898  -1.4898 
[ 5][ 1]:   0.0000   0.0000 
[ 5][ 2]:   0.7787   0.7787 
[ 6][ 0]:  -0.6207  -0.6207 
[ 6][ 1]:   1.7821   1.7821 
[ 6][ 2]:   0.7787   0.7787 
#+END_SRC

* colnorm_print 9 13 1
Checks if colnorm_print on a matrix with 1 thread produces correct
output.

#+TESTY: program='./colnorm_print 9 13 1'
#+BEGIN_SRC sh
==== Matrix Column Normalization Print ====
rows: 9  cols: 13  threads: 1
Matrix:
9 x 13 matrix
   0:  -6.00  -9.00   1.00   2.00  -6.00  -5.00   6.00   0.00   9.00   6.00  -5.00   4.00  -3.00 
   1:  -2.00   2.00 -10.00  -3.00   7.00  -5.00   4.00   7.00 -10.00  -4.00  -7.00  -4.00   9.00 
   2:   1.00   7.00  -8.00   4.00   3.00  -8.00  -7.00   2.00   8.00  -8.00   3.00  -7.00   6.00 
   3:  -5.00  -4.00   7.00  -8.00  -4.00   0.00  -3.00   6.00   8.00  -9.00   9.00   0.00  -7.00 
   4:  -8.00 -10.00   4.00  -1.00   5.00   7.00   3.00  -7.00   0.00  -9.00  -6.00   7.00  -5.00 
   5:   4.00   6.00  -6.00   6.00   8.00   8.00   4.00   9.00   0.00 -10.00   5.00  -3.00  -2.00 
   6:  -3.00   7.00  -8.00   0.00   8.00  -6.00   4.00  -6.00   2.00  -9.00  -5.00   9.00   3.00 
   7:  -4.00   0.00  -7.00   4.00   8.00  -8.00   8.00   7.00   7.00   8.00  -8.00  -3.00   8.00 
   8:   3.00  -3.00   2.00   0.00 -10.00  -9.00   5.00  -1.00  -4.00  -6.00   8.00   1.00   6.00 

========== avg ==========
[ i]:     BASE     OPTM
[ 0]:  -2.2222  -2.2222 
[ 1]:  -0.4444  -0.4444 
[ 2]:  -2.7778  -2.7778 
[ 3]:   0.4444   0.4444 
[ 4]:   2.1111   2.1111 
[ 5]:  -2.8889  -2.8889 
[ 6]:   2.6667   2.6667 
[ 7]:   1.8889   1.8889 
[ 8]:   2.2222   2.2222 
[ 9]:  -4.5556  -4.5556 
[10]:  -0.6667  -0.6667 
[11]:   0.4444   0.4444 
[12]:   1.6667   1.6667 
========== std ==========
[ i]:     BASE     OPTM
[ 0]:   3.8809   3.8809 
[ 1]:   6.1664   6.1664 
[ 2]:   5.9025   5.9025 
[ 3]:   4.0031   4.0031 
[ 4]:   6.5565   6.5565 
[ 5]:   6.0817   6.0817 
[ 6]:   4.4222   4.4222 
[ 7]:   5.5064   5.5064 
[ 8]:   6.0878   6.0878 
[ 9]:   6.4310   6.4310 
[10]:   6.4464   6.4464 
[11]:   5.0357   5.0357 
[12]:   5.6569   5.6569 
========== mat ==========
[ i][ j]:     BASE     OPTM
[ 0][ 0]:  -0.9734  -0.9734 
[ 0][ 1]:  -1.3874  -1.3874 
[ 0][ 2]:   0.6400   0.6400 
[ 0][ 3]:   0.3886   0.3886 
[ 0][ 4]:  -1.2371  -1.2371 
[ 0][ 5]:  -0.3471  -0.3471 
[ 0][ 6]:   0.7538   0.7538 
[ 0][ 7]:  -0.3430  -0.3430 
[ 0][ 8]:   1.1133   1.1133 
[ 0][ 9]:   1.6414   1.6414 
[ 0][10]:  -0.6722  -0.6722 
[ 0][11]:   0.7061   0.7061 
[ 0][12]:  -0.8250  -0.8250 
[ 1][ 0]:   0.0573   0.0573 
[ 1][ 1]:   0.3964   0.3964 
[ 1][ 2]:  -1.2236  -1.2236 
[ 1][ 3]:  -0.8604  -0.8604 
[ 1][ 4]:   0.7457   0.7457 
[ 1][ 5]:  -0.3471  -0.3471 
[ 1][ 6]:   0.3015   0.3015 
[ 1][ 7]:   0.9282   0.9282 
[ 1][ 8]:  -2.0076  -2.0076 
[ 1][ 9]:   0.0864   0.0864 
[ 1][10]:  -0.9825  -0.9825 
[ 1][11]:  -0.8826  -0.8826 
[ 1][12]:   1.2964   1.2964 
[ 2][ 0]:   0.8303   0.8303 
[ 2][ 1]:   1.2073   1.2073 
[ 2][ 2]:  -0.8847  -0.8847 
[ 2][ 3]:   0.8882   0.8882 
[ 2][ 4]:   0.1356   0.1356 
[ 2][ 5]:  -0.8404  -0.8404 
[ 2][ 6]:  -2.1860  -2.1860 
[ 2][ 7]:   0.0202   0.0202 
[ 2][ 8]:   0.9491   0.9491 
[ 2][ 9]:  -0.5356  -0.5356 
[ 2][10]:   0.5688   0.5688 
[ 2][11]:  -1.4783  -1.4783 
[ 2][12]:   0.7660   0.7660 
[ 3][ 0]:  -0.7157  -0.7157 
[ 3][ 1]:  -0.5766  -0.5766 
[ 3][ 2]:   1.6565   1.6565 
[ 3][ 3]:  -2.1095  -2.1095 
[ 3][ 4]:  -0.9321  -0.9321 
[ 3][ 5]:   0.4750   0.4750 
[ 3][ 6]:  -1.2814  -1.2814 
[ 3][ 7]:   0.7466   0.7466 
[ 3][ 8]:   0.9491   0.9491 
[ 3][ 9]:  -0.6911  -0.6911 
[ 3][10]:   1.4996   1.4996 
[ 3][11]:  -0.0883  -0.0883 
[ 3][12]:  -1.5321  -1.5321 
[ 4][ 0]:  -1.4888  -1.4888 
[ 4][ 1]:  -1.5496  -1.5496 
[ 4][ 2]:   1.1483   1.1483 
[ 4][ 3]:  -0.3608  -0.3608 
[ 4][ 4]:   0.4406   0.4406 
[ 4][ 5]:   1.6260   1.6260 
[ 4][ 6]:   0.0754   0.0754 
[ 4][ 7]:  -1.6143  -1.6143 
[ 4][ 8]:  -0.3650  -0.3650 
[ 4][ 9]:  -0.6911  -0.6911 
[ 4][10]:  -0.8273  -0.8273 
[ 4][11]:   1.3018   1.3018 
[ 4][12]:  -1.1785  -1.1785 
[ 5][ 0]:   1.6033   1.6033 
[ 5][ 1]:   1.0451   1.0451 
[ 5][ 2]:  -0.5459  -0.5459 
[ 5][ 3]:   1.3878   1.3878 
[ 5][ 4]:   0.8982   0.8982 
[ 5][ 5]:   1.7904   1.7904 
[ 5][ 6]:   0.3015   0.3015 
[ 5][ 7]:   1.2914   1.2914 
[ 5][ 8]:  -0.3650  -0.3650 
[ 5][ 9]:  -0.8466  -0.8466 
[ 5][10]:   0.8790   0.8790 
[ 5][11]:  -0.6840  -0.6840 
[ 5][12]:  -0.6482  -0.6482 
[ 6][ 0]:  -0.2004  -0.2004 
[ 6][ 1]:   1.2073   1.2073 
[ 6][ 2]:  -0.8847  -0.8847 
[ 6][ 3]:  -0.1110  -0.1110 
[ 6][ 4]:   0.8982   0.8982 
[ 6][ 5]:  -0.5115  -0.5115 
[ 6][ 6]:   0.3015   0.3015 
[ 6][ 7]:  -1.4327  -1.4327 
[ 6][ 8]:  -0.0365  -0.0365 
[ 6][ 9]:  -0.6911  -0.6911 
[ 6][10]:  -0.6722  -0.6722 
[ 6][11]:   1.6990   1.6990 
[ 6][12]:   0.2357   0.2357 
[ 7][ 0]:  -0.4581  -0.4581 
[ 7][ 1]:   0.0721   0.0721 
[ 7][ 2]:  -0.7153  -0.7153 
[ 7][ 3]:   0.8882   0.8882 
[ 7][ 4]:   0.8982   0.8982 
[ 7][ 5]:  -0.8404  -0.8404 
[ 7][ 6]:   1.2060   1.2060 
[ 7][ 7]:   0.9282   0.9282 
[ 7][ 8]:   0.7848   0.7848 
[ 7][ 9]:   1.9523   1.9523 
[ 7][10]:  -1.1376  -1.1376 
[ 7][11]:  -0.6840  -0.6840 
[ 7][12]:   1.1196   1.1196 
[ 8][ 0]:   1.3456   1.3456 
[ 8][ 1]:  -0.4144  -0.4144 
[ 8][ 2]:   0.8094   0.8094 
[ 8][ 3]:  -0.1110  -0.1110 
[ 8][ 4]:  -1.8472  -1.8472 
[ 8][ 5]:  -1.0048  -1.0048 
[ 8][ 6]:   0.5276   0.5276 
[ 8][ 7]:  -0.5246  -0.5246 
[ 8][ 8]:  -1.0221  -1.0221 
[ 8][ 9]:  -0.2246  -0.2246 
[ 8][10]:   1.3444   1.3444 
[ 8][11]:   0.1103   0.1103 
[ 8][12]:   0.7660   0.7660 
#+END_SRC

* colnorm_print 10 13 1
Checks if colnorm_print on a matrix with 1 thread produces correct
output.

#+TESTY: program='./colnorm_print 10 13 1'
#+BEGIN_SRC sh
==== Matrix Column Normalization Print ====
rows: 10  cols: 13  threads: 1
Matrix:
10 x 13 matrix
   0:  -6.00  -9.00   1.00   2.00  -6.00  -5.00   6.00   0.00   9.00   6.00  -5.00   4.00  -3.00 
   1:  -2.00   2.00 -10.00  -3.00   7.00  -5.00   4.00   7.00 -10.00  -4.00  -7.00  -4.00   9.00 
   2:   1.00   7.00  -8.00   4.00   3.00  -8.00  -7.00   2.00   8.00  -8.00   3.00  -7.00   6.00 
   3:  -5.00  -4.00   7.00  -8.00  -4.00   0.00  -3.00   6.00   8.00  -9.00   9.00   0.00  -7.00 
   4:  -8.00 -10.00   4.00  -1.00   5.00   7.00   3.00  -7.00   0.00  -9.00  -6.00   7.00  -5.00 
   5:   4.00   6.00  -6.00   6.00   8.00   8.00   4.00   9.00   0.00 -10.00   5.00  -3.00  -2.00 
   6:  -3.00   7.00  -8.00   0.00   8.00  -6.00   4.00  -6.00   2.00  -9.00  -5.00   9.00   3.00 
   7:  -4.00   0.00  -7.00   4.00   8.00  -8.00   8.00   7.00   7.00   8.00  -8.00  -3.00   8.00 
   8:   3.00  -3.00   2.00   0.00 -10.00  -9.00   5.00  -1.00  -4.00  -6.00   8.00   1.00   6.00 
   9:   3.00   3.00   9.00  -8.00  -1.00   4.00   8.00   4.00   7.00   3.00   4.00  -2.00  -7.00 

========== avg ==========
[ i]:     BASE     OPTM
[ 0]:  -1.7000  -1.7000 
[ 1]:  -0.1000  -0.1000 
[ 2]:  -1.6000  -1.6000 
[ 3]:  -0.4000  -0.4000 
[ 4]:   1.8000   1.8000 
[ 5]:  -2.2000  -2.2000 
[ 6]:   3.2000   3.2000 
[ 7]:   2.1000   2.1000 
[ 8]:   2.7000   2.7000 
[ 9]:  -3.8000  -3.8000 
[10]:  -0.2000  -0.2000 
[11]:   0.2000   0.2000 
[12]:   0.8000   0.8000 
========== std ==========
[ i]:     BASE     OPTM
[ 0]:   4.0012   4.0012 
[ 1]:   5.9405   5.9405 
[ 2]:   6.6212   6.6212 
[ 3]:   4.5651   4.5651 
[ 4]:   6.2897   6.2897 
[ 5]:   6.1286   6.1286 
[ 6]:   4.4900   4.4900 
[ 7]:   5.2621   5.2621 
[ 8]:   5.9506   5.9506 
[ 9]:   6.5085   6.5085 
[10]:   6.2738   6.2738 
[11]:   4.8332   4.8332 
[12]:   5.9632   5.9632 
========== mat ==========
[ i][ j]:     BASE     OPTM
[ 0][ 0]:  -1.0747  -1.0747 
[ 0][ 1]:  -1.4982  -1.4982 
[ 0][ 2]:   0.3927   0.3927 
[ 0][ 3]:   0.5257   0.5257 
[ 0][ 4]:  -1.2401  -1.2401 
[ 0][ 5]:  -0.4569  -0.4569 
[ 0][ 6]:   0.6236   0.6236 
[ 0][ 7]:  -0.3991  -0.3991 
[ 0][ 8]:   1.0587   1.0587 
[ 0][ 9]:   1.5057   1.5057 
[ 0][10]:  -0.7651  -0.7651 
[ 0][11]:   0.7862   0.7862 
[ 0][12]:  -0.6372  -0.6372 
[ 1][ 0]:  -0.0750  -0.0750 
[ 1][ 1]:   0.3535   0.3535 
[ 1][ 2]:  -1.2687  -1.2687 
[ 1][ 3]:  -0.5695  -0.5695 
[ 1][ 4]:   0.8268   0.8268 
[ 1][ 5]:  -0.4569  -0.4569 
[ 1][ 6]:   0.1782   0.1782 
[ 1][ 7]:   0.9312   0.9312 
[ 1][ 8]:  -2.1342  -2.1342 
[ 1][ 9]:  -0.0307  -0.0307 
[ 1][10]:  -1.0839  -1.0839 
[ 1][11]:  -0.8690  -0.8690 
[ 1][12]:   1.3751   1.3751 
[ 2][ 0]:   0.6748   0.6748 
[ 2][ 1]:   1.1952   1.1952 
[ 2][ 2]:  -0.9666  -0.9666 
[ 2][ 3]:   0.9638   0.9638 
[ 2][ 4]:   0.1908   0.1908 
[ 2][ 5]:  -0.9464  -0.9464 
[ 2][ 6]:  -2.2717  -2.2717 
[ 2][ 7]:  -0.0190  -0.0190 
[ 2][ 8]:   0.8907   0.8907 
[ 2][ 9]:  -0.6453  -0.6453 
[ 2][10]:   0.5101   0.5101 
[ 2][11]:  -1.4897  -1.4897 
[ 2][12]:   0.8720   0.8720 
[ 3][ 0]:  -0.8247  -0.8247 
[ 3][ 1]:  -0.6565  -0.6565 
[ 3][ 2]:   1.2989   1.2989 
[ 3][ 3]:  -1.6648  -1.6648 
[ 3][ 4]:  -0.9221  -0.9221 
[ 3][ 5]:   0.3590   0.3590 
[ 3][ 6]:  -1.3808  -1.3808 
[ 3][ 7]:   0.7411   0.7411 
[ 3][ 8]:   0.8907   0.8907 
[ 3][ 9]:  -0.7990  -0.7990 
[ 3][10]:   1.4664   1.4664 
[ 3][11]:  -0.0414  -0.0414 
[ 3][12]:  -1.3080  -1.3080 
[ 4][ 0]:  -1.5745  -1.5745 
[ 4][ 1]:  -1.6665  -1.6665 
[ 4][ 2]:   0.8458   0.8458 
[ 4][ 3]:  -0.1314  -0.1314 
[ 4][ 4]:   0.5088   0.5088 
[ 4][ 5]:   1.5012   1.5012 
[ 4][ 6]:  -0.0445  -0.0445 
[ 4][ 7]:  -1.7293  -1.7293 
[ 4][ 8]:  -0.4537  -0.4537 
[ 4][ 9]:  -0.7990  -0.7990 
[ 4][10]:  -0.9245  -0.9245 
[ 4][11]:   1.4069   1.4069 
[ 4][12]:  -0.9726  -0.9726 
[ 5][ 0]:   1.4246   1.4246 
[ 5][ 1]:   1.0268   1.0268 
[ 5][ 2]:  -0.6645  -0.6645 
[ 5][ 3]:   1.4019   1.4019 
[ 5][ 4]:   0.9857   0.9857 
[ 5][ 5]:   1.6643   1.6643 
[ 5][ 6]:   0.1782   0.1782 
[ 5][ 7]:   1.3113   1.3113 
[ 5][ 8]:  -0.4537  -0.4537 
[ 5][ 9]:  -0.9526  -0.9526 
[ 5][10]:   0.8288   0.8288 
[ 5][11]:  -0.6621  -0.6621 
[ 5][12]:  -0.4695  -0.4695 
[ 6][ 0]:  -0.3249  -0.3249 
[ 6][ 1]:   1.1952   1.1952 
[ 6][ 2]:  -0.9666  -0.9666 
[ 6][ 3]:   0.0876   0.0876 
[ 6][ 4]:   0.9857   0.9857 
[ 6][ 5]:  -0.6200  -0.6200 
[ 6][ 6]:   0.1782   0.1782 
[ 6][ 7]:  -1.5393  -1.5393 
[ 6][ 8]:  -0.1176  -0.1176 
[ 6][ 9]:  -0.7990  -0.7990 
[ 6][10]:  -0.7651  -0.7651 
[ 6][11]:   1.8207   1.8207 
[ 6][12]:   0.3689   0.3689 
[ 7][ 0]:  -0.5748  -0.5748 
[ 7][ 1]:   0.0168   0.0168 
[ 7][ 2]:  -0.8156  -0.8156 
[ 7][ 3]:   0.9638   0.9638 
[ 7][ 4]:   0.9857   0.9857 
[ 7][ 5]:  -0.9464  -0.9464 
[ 7][ 6]:   1.0690   1.0690 
[ 7][ 7]:   0.9312   0.9312 
[ 7][ 8]:   0.7226   0.7226 
[ 7][ 9]:   1.8130   1.8130 
[ 7][10]:  -1.2433  -1.2433 
[ 7][11]:  -0.6621  -0.6621 
[ 7][12]:   1.2074   1.2074 
[ 8][ 0]:   1.1746   1.1746 
[ 8][ 1]:  -0.4882  -0.4882 
[ 8][ 2]:   0.5437   0.5437 
[ 8][ 3]:   0.0876   0.0876 
[ 8][ 4]:  -1.8761  -1.8761 
[ 8][ 5]:  -1.1095  -1.1095 
[ 8][ 6]:   0.4009   0.4009 
[ 8][ 7]:  -0.5891  -0.5891 
[ 8][ 8]:  -1.1259  -1.1259 
[ 8][ 9]:  -0.3380  -0.3380 
[ 8][10]:   1.3070   1.3070 
[ 8][11]:   0.1655   0.1655 
[ 8][12]:   0.8720   0.8720 
[ 9][ 0]:   1.1746   1.1746 
[ 9][ 1]:   0.5218   0.5218 
[ 9][ 2]:   1.6009   1.6009 
[ 9][ 3]:  -1.6648  -1.6648 
[ 9][ 4]:  -0.4452  -0.4452 
[ 9][ 5]:   1.0116   1.0116 
[ 9][ 6]:   1.0690   1.0690 
[ 9][ 7]:   0.3611   0.3611 
[ 9][ 8]:   0.7226   0.7226 
[ 9][ 9]:   1.0448   1.0448 
[ 9][10]:   0.6695   0.6695 
[ 9][11]:  -0.4552  -0.4552 
[ 9][12]:  -1.3080  -1.3080 
#+END_SRC

* colnorm_print 10 13 2
Checks if colnorm_print on a matrix with 2 threads produces correct
output.
#+TESTY: program='./colnorm_print 10 13 2'
#+BEGIN_SRC sh
==== Matrix Column Normalization Print ====
rows: 10  cols: 13  threads: 2
Matrix:
10 x 13 matrix
   0:  -6.00  -9.00   1.00   2.00  -6.00  -5.00   6.00   0.00   9.00   6.00  -5.00   4.00  -3.00 
   1:  -2.00   2.00 -10.00  -3.00   7.00  -5.00   4.00   7.00 -10.00  -4.00  -7.00  -4.00   9.00 
   2:   1.00   7.00  -8.00   4.00   3.00  -8.00  -7.00   2.00   8.00  -8.00   3.00  -7.00   6.00 
   3:  -5.00  -4.00   7.00  -8.00  -4.00   0.00  -3.00   6.00   8.00  -9.00   9.00   0.00  -7.00 
   4:  -8.00 -10.00   4.00  -1.00   5.00   7.00   3.00  -7.00   0.00  -9.00  -6.00   7.00  -5.00 
   5:   4.00   6.00  -6.00   6.00   8.00   8.00   4.00   9.00   0.00 -10.00   5.00  -3.00  -2.00 
   6:  -3.00   7.00  -8.00   0.00   8.00  -6.00   4.00  -6.00   2.00  -9.00  -5.00   9.00   3.00 
   7:  -4.00   0.00  -7.00   4.00   8.00  -8.00   8.00   7.00   7.00   8.00  -8.00  -3.00   8.00 
   8:   3.00  -3.00   2.00   0.00 -10.00  -9.00   5.00  -1.00  -4.00  -6.00   8.00   1.00   6.00 
   9:   3.00   3.00   9.00  -8.00  -1.00   4.00   8.00   4.00   7.00   3.00   4.00  -2.00  -7.00 

========== avg ==========
[ i]:     BASE     OPTM
[ 0]:  -1.7000  -1.7000 
[ 1]:  -0.1000  -0.1000 
[ 2]:  -1.6000  -1.6000 
[ 3]:  -0.4000  -0.4000 
[ 4]:   1.8000   1.8000 
[ 5]:  -2.2000  -2.2000 
[ 6]:   3.2000   3.2000 
[ 7]:   2.1000   2.1000 
[ 8]:   2.7000   2.7000 
[ 9]:  -3.8000  -3.8000 
[10]:  -0.2000  -0.2000 
[11]:   0.2000   0.2000 
[12]:   0.8000   0.8000 
========== std ==========
[ i]:     BASE     OPTM
[ 0]:   4.0012   4.0012 
[ 1]:   5.9405   5.9405 
[ 2]:   6.6212   6.6212 
[ 3]:   4.5651   4.5651 
[ 4]:   6.2897   6.2897 
[ 5]:   6.1286   6.1286 
[ 6]:   4.4900   4.4900 
[ 7]:   5.2621   5.2621 
[ 8]:   5.9506   5.9506 
[ 9]:   6.5085   6.5085 
[10]:   6.2738   6.2738 
[11]:   4.8332   4.8332 
[12]:   5.9632   5.9632 
========== mat ==========
[ i][ j]:     BASE     OPTM
[ 0][ 0]:  -1.0747  -1.0747 
[ 0][ 1]:  -1.4982  -1.4982 
[ 0][ 2]:   0.3927   0.3927 
[ 0][ 3]:   0.5257   0.5257 
[ 0][ 4]:  -1.2401  -1.2401 
[ 0][ 5]:  -0.4569  -0.4569 
[ 0][ 6]:   0.6236   0.6236 
[ 0][ 7]:  -0.3991  -0.3991 
[ 0][ 8]:   1.0587   1.0587 
[ 0][ 9]:   1.5057   1.5057 
[ 0][10]:  -0.7651  -0.7651 
[ 0][11]:   0.7862   0.7862 
[ 0][12]:  -0.6372  -0.6372 
[ 1][ 0]:  -0.0750  -0.0750 
[ 1][ 1]:   0.3535   0.3535 
[ 1][ 2]:  -1.2687  -1.2687 
[ 1][ 3]:  -0.5695  -0.5695 
[ 1][ 4]:   0.8268   0.8268 
[ 1][ 5]:  -0.4569  -0.4569 
[ 1][ 6]:   0.1782   0.1782 
[ 1][ 7]:   0.9312   0.9312 
[ 1][ 8]:  -2.1342  -2.1342 
[ 1][ 9]:  -0.0307  -0.0307 
[ 1][10]:  -1.0839  -1.0839 
[ 1][11]:  -0.8690  -0.8690 
[ 1][12]:   1.3751   1.3751 
[ 2][ 0]:   0.6748   0.6748 
[ 2][ 1]:   1.1952   1.1952 
[ 2][ 2]:  -0.9666  -0.9666 
[ 2][ 3]:   0.9638   0.9638 
[ 2][ 4]:   0.1908   0.1908 
[ 2][ 5]:  -0.9464  -0.9464 
[ 2][ 6]:  -2.2717  -2.2717 
[ 2][ 7]:  -0.0190  -0.0190 
[ 2][ 8]:   0.8907   0.8907 
[ 2][ 9]:  -0.6453  -0.6453 
[ 2][10]:   0.5101   0.5101 
[ 2][11]:  -1.4897  -1.4897 
[ 2][12]:   0.8720   0.8720 
[ 3][ 0]:  -0.8247  -0.8247 
[ 3][ 1]:  -0.6565  -0.6565 
[ 3][ 2]:   1.2989   1.2989 
[ 3][ 3]:  -1.6648  -1.6648 
[ 3][ 4]:  -0.9221  -0.9221 
[ 3][ 5]:   0.3590   0.3590 
[ 3][ 6]:  -1.3808  -1.3808 
[ 3][ 7]:   0.7411   0.7411 
[ 3][ 8]:   0.8907   0.8907 
[ 3][ 9]:  -0.7990  -0.7990 
[ 3][10]:   1.4664   1.4664 
[ 3][11]:  -0.0414  -0.0414 
[ 3][12]:  -1.3080  -1.3080 
[ 4][ 0]:  -1.5745  -1.5745 
[ 4][ 1]:  -1.6665  -1.6665 
[ 4][ 2]:   0.8458   0.8458 
[ 4][ 3]:  -0.1314  -0.1314 
[ 4][ 4]:   0.5088   0.5088 
[ 4][ 5]:   1.5012   1.5012 
[ 4][ 6]:  -0.0445  -0.0445 
[ 4][ 7]:  -1.7293  -1.7293 
[ 4][ 8]:  -0.4537  -0.4537 
[ 4][ 9]:  -0.7990  -0.7990 
[ 4][10]:  -0.9245  -0.9245 
[ 4][11]:   1.4069   1.4069 
[ 4][12]:  -0.9726  -0.9726 
[ 5][ 0]:   1.4246   1.4246 
[ 5][ 1]:   1.0268   1.0268 
[ 5][ 2]:  -0.6645  -0.6645 
[ 5][ 3]:   1.4019   1.4019 
[ 5][ 4]:   0.9857   0.9857 
[ 5][ 5]:   1.6643   1.6643 
[ 5][ 6]:   0.1782   0.1782 
[ 5][ 7]:   1.3113   1.3113 
[ 5][ 8]:  -0.4537  -0.4537 
[ 5][ 9]:  -0.9526  -0.9526 
[ 5][10]:   0.8288   0.8288 
[ 5][11]:  -0.6621  -0.6621 
[ 5][12]:  -0.4695  -0.4695 
[ 6][ 0]:  -0.3249  -0.3249 
[ 6][ 1]:   1.1952   1.1952 
[ 6][ 2]:  -0.9666  -0.9666 
[ 6][ 3]:   0.0876   0.0876 
[ 6][ 4]:   0.9857   0.9857 
[ 6][ 5]:  -0.6200  -0.6200 
[ 6][ 6]:   0.1782   0.1782 
[ 6][ 7]:  -1.5393  -1.5393 
[ 6][ 8]:  -0.1176  -0.1176 
[ 6][ 9]:  -0.7990  -0.7990 
[ 6][10]:  -0.7651  -0.7651 
[ 6][11]:   1.8207   1.8207 
[ 6][12]:   0.3689   0.3689 
[ 7][ 0]:  -0.5748  -0.5748 
[ 7][ 1]:   0.0168   0.0168 
[ 7][ 2]:  -0.8156  -0.8156 
[ 7][ 3]:   0.9638   0.9638 
[ 7][ 4]:   0.9857   0.9857 
[ 7][ 5]:  -0.9464  -0.9464 
[ 7][ 6]:   1.0690   1.0690 
[ 7][ 7]:   0.9312   0.9312 
[ 7][ 8]:   0.7226   0.7226 
[ 7][ 9]:   1.8130   1.8130 
[ 7][10]:  -1.2433  -1.2433 
[ 7][11]:  -0.6621  -0.6621 
[ 7][12]:   1.2074   1.2074 
[ 8][ 0]:   1.1746   1.1746 
[ 8][ 1]:  -0.4882  -0.4882 
[ 8][ 2]:   0.5437   0.5437 
[ 8][ 3]:   0.0876   0.0876 
[ 8][ 4]:  -1.8761  -1.8761 
[ 8][ 5]:  -1.1095  -1.1095 
[ 8][ 6]:   0.4009   0.4009 
[ 8][ 7]:  -0.5891  -0.5891 
[ 8][ 8]:  -1.1259  -1.1259 
[ 8][ 9]:  -0.3380  -0.3380 
[ 8][10]:   1.3070   1.3070 
[ 8][11]:   0.1655   0.1655 
[ 8][12]:   0.8720   0.8720 
[ 9][ 0]:   1.1746   1.1746 
[ 9][ 1]:   0.5218   0.5218 
[ 9][ 2]:   1.6009   1.6009 
[ 9][ 3]:  -1.6648  -1.6648 
[ 9][ 4]:  -0.4452  -0.4452 
[ 9][ 5]:   1.0116   1.0116 
[ 9][ 6]:   1.0690   1.0690 
[ 9][ 7]:   0.3611   0.3611 
[ 9][ 8]:   0.7226   0.7226 
[ 9][ 9]:   1.0448   1.0448 
[ 9][10]:   0.6695   0.6695 
[ 9][11]:  -0.4552  -0.4552 
[ 9][12]:  -1.3080  -1.3080 
#+END_SRC

* colnorm_print 11 14 2
Checks if colnorm_print on a matrix with 2 threads produces correct
output.

#+TESTY: program='./colnorm_print 11 14 2'
#+BEGIN_SRC sh
==== Matrix Column Normalization Print ====
rows: 11  cols: 14  threads: 2
Matrix:
11 x 14 matrix
   0:  -6.00  -9.00   1.00   2.00  -6.00  -5.00   6.00   0.00   9.00   6.00  -5.00   4.00  -3.00  -2.00 
   1:   2.00 -10.00  -3.00   7.00  -5.00   4.00   7.00 -10.00  -4.00  -7.00  -4.00   9.00   1.00   7.00 
   2:  -8.00   4.00   3.00  -8.00  -7.00   2.00   8.00  -8.00   3.00  -7.00   6.00  -5.00  -4.00   7.00 
   3:  -8.00  -4.00   0.00  -3.00   6.00   8.00  -9.00   9.00   0.00  -7.00  -8.00 -10.00   4.00  -1.00 
   4:   5.00   7.00   3.00  -7.00   0.00  -9.00  -6.00   7.00  -5.00   4.00   6.00  -6.00   6.00   8.00 
   5:   8.00   4.00   9.00   0.00 -10.00   5.00  -3.00  -2.00  -3.00   7.00  -8.00   0.00   8.00  -6.00 
   6:   4.00  -6.00   2.00  -9.00  -5.00   9.00   3.00  -4.00   0.00  -7.00   4.00   8.00  -8.00   8.00 
   7:   7.00   7.00   8.00  -8.00  -3.00   8.00   3.00  -3.00   2.00   0.00 -10.00  -9.00   5.00  -1.00 
   8:  -4.00  -6.00   8.00   1.00   6.00   3.00   3.00   9.00  -8.00  -1.00   4.00   8.00   4.00   7.00 
   9:   3.00   4.00  -2.00  -7.00   7.00  -8.00   9.00   4.00  -4.00  -9.00   3.00   6.00   6.00   4.00 
  10:   1.00  -9.00   9.00   7.00   1.00   1.00   7.00   5.00  -1.00   1.00  -6.00   1.00  -6.00  -3.00 

========== avg ==========
[ i]:     BASE     OPTM
[ 0]:   0.3636   0.3636 
[ 1]:  -1.6364  -1.6364 
[ 2]:   3.4545   3.4545 
[ 3]:  -2.2727  -2.2727 
[ 4]:  -1.4545  -1.4545 
[ 5]:   1.6364   1.6364 
[ 6]:   2.5455   2.5455 
[ 7]:   0.6364   0.6364 
[ 8]:  -1.0000  -1.0000 
[ 9]:  -1.8182  -1.8182 
[10]:  -1.6364  -1.6364 
[11]:   0.5455   0.5455 
[12]:   1.1818   1.1818 
[13]:   2.5455   2.5455 
========== std ==========
[ i]:     BASE     OPTM
[ 0]:   5.6129   5.6129 
[ 1]:   6.5125   6.5125 
[ 2]:   4.2074   4.2074 
[ 3]:   5.7381   5.7381 
[ 4]:   5.5818   5.5818 
[ 5]:   6.0644   6.0644 
[ 6]:   5.7266   5.7266 
[ 7]:   6.3285   6.3285 
[ 8]:   4.4107   4.4107 
[ 9]:   5.5892   5.5892 
[10]:   5.9433   5.9433 
[11]:   6.7469   6.7469 
[12]:   5.2539   5.2539 
[13]:   4.9610   4.9610 
========== mat ==========
[ i][ j]:     BASE     OPTM
[ 0][ 0]:  -1.1338  -1.1338 
[ 0][ 1]:  -1.1307  -1.1307 
[ 0][ 2]:  -0.5834  -0.5834 
[ 0][ 3]:   0.7446   0.7446 
[ 0][ 4]:  -0.8143  -0.8143 
[ 0][ 5]:  -1.0943  -1.0943 
[ 0][ 6]:   0.6033   0.6033 
[ 0][ 7]:  -0.1006  -0.1006 
[ 0][ 8]:   2.2672   2.2672 
[ 0][ 9]:   1.3988   1.3988 
[ 0][10]:  -0.5660  -0.5660 
[ 0][11]:   0.5120   0.5120 
[ 0][12]:  -0.7959  -0.7959 
[ 0][13]:  -0.9162  -0.9162 
[ 1][ 0]:   0.2915   0.2915 
[ 1][ 1]:  -1.2842  -1.2842 
[ 1][ 2]:  -1.5341  -1.5341 
[ 1][ 3]:   1.6160   1.6160 
[ 1][ 4]:  -0.6352  -0.6352 
[ 1][ 5]:   0.3898   0.3898 
[ 1][ 6]:   0.7779   0.7779 
[ 1][ 7]:  -1.6807  -1.6807 
[ 1][ 8]:  -0.6802  -0.6802 
[ 1][ 9]:  -0.9271  -0.9271 
[ 1][10]:  -0.3977  -0.3977 
[ 1][11]:   1.2531   1.2531 
[ 1][12]:  -0.0346  -0.0346 
[ 1][13]:   0.8979   0.8979 
[ 2][ 0]:  -1.4901  -1.4901 
[ 2][ 1]:   0.8655   0.8655 
[ 2][ 2]:  -0.1080  -0.1080 
[ 2][ 3]:  -0.9981  -0.9981 
[ 2][ 4]:  -0.9935  -0.9935 
[ 2][ 5]:   0.0600   0.0600 
[ 2][ 6]:   0.9525   0.9525 
[ 2][ 7]:  -1.3647  -1.3647 
[ 2][ 8]:   0.9069   0.9069 
[ 2][ 9]:  -0.9271  -0.9271 
[ 2][10]:   1.2849   1.2849 
[ 2][11]:  -0.8219  -0.8219 
[ 2][12]:  -0.9863  -0.9863 
[ 2][13]:   0.8979   0.8979 
[ 3][ 0]:  -1.4901  -1.4901 
[ 3][ 1]:  -0.3629  -0.3629 
[ 3][ 2]:  -0.8211  -0.8211 
[ 3][ 3]:  -0.1267  -0.1267 
[ 3][ 4]:   1.3355   1.3355 
[ 3][ 5]:   1.0493   1.0493 
[ 3][ 6]:  -2.0161  -2.0161 
[ 3][ 7]:   1.3216   1.3216 
[ 3][ 8]:   0.2267   0.2267 
[ 3][ 9]:  -0.9271  -0.9271 
[ 3][10]:  -1.0707  -1.0707 
[ 3][11]:  -1.5630  -1.5630 
[ 3][12]:   0.5364   0.5364 
[ 3][13]:  -0.7147  -0.7147 
[ 4][ 0]:   0.8260   0.8260 
[ 4][ 1]:   1.3261   1.3261 
[ 4][ 2]:  -0.1080  -0.1080 
[ 4][ 3]:  -0.8238  -0.8238 
[ 4][ 4]:   0.2606   0.2606 
[ 4][ 5]:  -1.7539  -1.7539 
[ 4][ 6]:  -1.4923  -1.4923 
[ 4][ 7]:   1.0056   1.0056 
[ 4][ 8]:  -0.9069  -0.9069 
[ 4][ 9]:   1.0410   1.0410 
[ 4][10]:   1.2849   1.2849 
[ 4][11]:  -0.9701  -0.9701 
[ 4][12]:   0.9171   0.9171 
[ 4][13]:   1.0995   1.0995 
[ 5][ 0]:   1.3605   1.3605 
[ 5][ 1]:   0.8655   0.8655 
[ 5][ 2]:   1.3180   1.3180 
[ 5][ 3]:   0.3961   0.3961 
[ 5][ 4]:  -1.5309  -1.5309 
[ 5][ 5]:   0.5547   0.5547 
[ 5][ 6]:  -0.9684  -0.9684 
[ 5][ 7]:  -0.4166  -0.4166 
[ 5][ 8]:  -0.4534  -0.4534 
[ 5][ 9]:   1.5777   1.5777 
[ 5][10]:  -1.0707  -1.0707 
[ 5][11]:  -0.0808  -0.0808 
[ 5][12]:   1.2977   1.2977 
[ 5][13]:  -1.7225  -1.7225 
[ 6][ 0]:   0.6479   0.6479 
[ 6][ 1]:  -0.6700  -0.6700 
[ 6][ 2]:  -0.3457  -0.3457 
[ 6][ 3]:  -1.1724  -1.1724 
[ 6][ 4]:  -0.6352  -0.6352 
[ 6][ 5]:   1.2142   1.2142 
[ 6][ 6]:   0.0794   0.0794 
[ 6][ 7]:  -0.7326  -0.7326 
[ 6][ 8]:   0.2267   0.2267 
[ 6][ 9]:  -0.9271  -0.9271 
[ 6][10]:   0.9484   0.9484 
[ 6][11]:   1.1049   1.1049 
[ 6][12]:  -1.7476  -1.7476 
[ 6][13]:   1.0995   1.0995 
[ 7][ 0]:   1.1824   1.1824 
[ 7][ 1]:   1.3261   1.3261 
[ 7][ 2]:   1.0803   1.0803 
[ 7][ 3]:  -0.9981  -0.9981 
[ 7][ 4]:  -0.2769  -0.2769 
[ 7][ 5]:   1.0493   1.0493 
[ 7][ 6]:   0.0794   0.0794 
[ 7][ 7]:  -0.5746  -0.5746 
[ 7][ 8]:   0.6802   0.6802 
[ 7][ 9]:   0.3253   0.3253 
[ 7][10]:  -1.4072  -1.4072 
[ 7][11]:  -1.4148  -1.4148 
[ 7][12]:   0.7267   0.7267 
[ 7][13]:  -0.7147  -0.7147 
[ 8][ 0]:  -0.7774  -0.7774 
[ 8][ 1]:  -0.6700  -0.6700 
[ 8][ 2]:   1.0803   1.0803 
[ 8][ 3]:   0.5704   0.5704 
[ 8][ 4]:   1.3355   1.3355 
[ 8][ 5]:   0.2249   0.2249 
[ 8][ 6]:   0.0794   0.0794 
[ 8][ 7]:   1.3216   1.3216 
[ 8][ 8]:  -1.5870  -1.5870 
[ 8][ 9]:   0.1464   0.1464 
[ 8][10]:   0.9484   0.9484 
[ 8][11]:   1.1049   1.1049 
[ 8][12]:   0.5364   0.5364 
[ 8][13]:   0.8979   0.8979 
[ 9][ 0]:   0.4697   0.4697 
[ 9][ 1]:   0.8655   0.8655 
[ 9][ 2]:  -1.2964  -1.2964 
[ 9][ 3]:  -0.8238  -0.8238 
[ 9][ 4]:   1.5146   1.5146 
[ 9][ 5]:  -1.5890  -1.5890 
[ 9][ 6]:   1.1271   1.1271 
[ 9][ 7]:   0.5315   0.5315 
[ 9][ 8]:  -0.6802  -0.6802 
[ 9][ 9]:  -1.2849  -1.2849 
[ 9][10]:   0.7801   0.7801 
[ 9][11]:   0.8085   0.8085 
[ 9][12]:   0.9171   0.9171 
[ 9][13]:   0.2932   0.2932 
[10][ 0]:   0.1134   0.1134 
[10][ 1]:  -1.1307  -1.1307 
[10][ 2]:   1.3180   1.3180 
[10][ 3]:   1.6160   1.6160 
[10][ 4]:   0.4397   0.4397 
[10][ 5]:  -0.1049  -0.1049 
[10][ 6]:   0.7779   0.7779 
[10][ 7]:   0.6895   0.6895 
[10][ 8]:   0.0000   0.0000 
[10][ 9]:   0.5042   0.5042 
[10][10]:  -0.7342  -0.7342 
[10][11]:   0.0674   0.0674 
[10][12]:  -1.3670  -1.3670 
[10][13]:  -1.1178  -1.1178 
#+END_SRC

* colnorm_print 16 18 3
Checks if colnorm_print on a matrix with 3 threads produces correct
output.

#+TESTY: program='./colnorm_print 16 18 3'
#+BEGIN_SRC sh
==== Matrix Column Normalization Print ====
rows: 16  cols: 18  threads: 3
Matrix:
16 x 18 matrix
   0:  -6.00  -9.00   1.00   2.00  -6.00  -5.00   6.00   0.00   9.00   6.00  -5.00   4.00  -3.00  -2.00   2.00 -10.00  -3.00   7.00 
   1:  -5.00   4.00   7.00 -10.00  -4.00  -7.00  -4.00   9.00   1.00   7.00  -8.00   4.00   3.00  -8.00  -7.00   2.00   8.00  -8.00 
   2:   3.00  -7.00   6.00  -5.00  -4.00   7.00  -8.00  -4.00   0.00  -3.00   6.00   8.00  -9.00   9.00   0.00  -7.00  -8.00 -10.00 
   3:   4.00  -1.00   5.00   7.00   3.00  -7.00   0.00  -9.00  -6.00   7.00  -5.00   4.00   6.00  -6.00   6.00   8.00   8.00   4.00 
   4:   9.00   0.00 -10.00   5.00  -3.00  -2.00  -3.00   7.00  -8.00   0.00   8.00  -6.00   4.00  -6.00   2.00  -9.00  -5.00   9.00 
   5:   3.00  -4.00   0.00  -7.00   4.00   8.00  -8.00   8.00   7.00   7.00   8.00  -8.00  -3.00   8.00   3.00  -3.00   2.00   0.00 
   6: -10.00  -9.00   5.00  -1.00  -4.00  -6.00   8.00   1.00   6.00   3.00   3.00   9.00  -8.00  -1.00   4.00   8.00   4.00   7.00 
   7:   3.00   4.00  -2.00  -7.00   7.00  -8.00   9.00   4.00  -4.00  -9.00   3.00   6.00   6.00   4.00   1.00  -9.00   9.00   7.00 
   8:   1.00   1.00   7.00   5.00  -1.00   1.00  -6.00   1.00  -6.00  -3.00   7.00 -10.00  -2.00  -5.00   6.00   5.00  -9.00  -3.00 
   9:   2.00   0.00   0.00  -2.00  -4.00   8.00  -3.00 -10.00   4.00  -6.00  -5.00   1.00   1.00   3.00  -3.00  -9.00   0.00   7.00 
  10:  -6.00   5.00   7.00  -7.00  -3.00  -6.00  -6.00   1.00   0.00 -10.00  -2.00  -9.00   8.00   2.00   9.00  -1.00  -6.00  -4.00 
  11:  -8.00  -1.00   5.00   3.00  -9.00   1.00  -9.00  -1.00  -2.00   0.00   0.00 -10.00   6.00  -2.00  -7.00  -3.00   2.00  -2.00 
  12:  -9.00   8.00  -9.00   6.00   7.00  -4.00   5.00   9.00   8.00  -7.00   2.00   2.00  -1.00  -8.00   1.00   1.00  -6.00   0.00 
  13:   0.00   1.00   3.00   0.00  -6.00   9.00  -4.00  -9.00   6.00  -9.00   6.00   6.00  -1.00 -10.00   6.00   9.00   1.00   4.00 
  14:  -6.00   5.00   1.00  -9.00   5.00   7.00  -5.00   8.00   6.00   0.00   4.00   5.00   5.00   4.00   1.00  -5.00  -8.00  -9.00 
  15:  -1.00  -6.00  -5.00   6.00   1.00   4.00   2.00  -1.00  -5.00   1.00  -6.00   7.00   8.00  -4.00  -2.00  -3.00   5.00  -6.00 

========== avg ==========
[ i]:     BASE     OPTM
[ 0]:  -1.6250  -1.6250 
[ 1]:  -0.5625  -0.5625 
[ 2]:   1.3125   1.3125 
[ 3]:  -0.8750  -0.8750 
[ 4]:  -1.0625  -1.0625 
[ 5]:   0.0000   0.0000 
[ 6]:  -1.6250  -1.6250 
[ 7]:   0.8750   0.8750 
[ 8]:   1.0000   1.0000 
[ 9]:  -1.0000  -1.0000 
[10]:   1.0000   1.0000 
[11]:   0.8125   0.8125 
[12]:   1.2500   1.2500 
[13]:  -1.3750  -1.3750 
[14]:   1.3750   1.3750 
[15]:  -1.6250  -1.6250 
[16]:  -0.3750  -0.3750 
[17]:   0.1875   0.1875 
========== std ==========
[ i]:     BASE     OPTM
[ 0]:   5.3953   5.3953 
[ 1]:   5.0494   5.0494 
[ 2]:   5.3118   5.3118 
[ 3]:   5.7541   5.7541 
[ 4]:   4.7889   4.7889 
[ 5]:   6.1441   6.1441 
[ 6]:   5.7214   5.7214 
[ 7]:   6.2537   6.2537 
[ 8]:   5.5000   5.5000 
[ 9]:   5.8202   5.8202 
[10]:   5.3033   5.3033 
[11]:   6.6822   6.6822 
[12]:   5.1901   5.1901 
[13]:   5.6444   5.6444 
[14]:   4.3714   4.3714 
[15]:   6.3332   6.3332 
[16]:   5.9778   5.9778 
[17]:   6.2171   6.2171 
========== mat ==========
[ i][ j]:     BASE     OPTM
[ 0][ 0]:  -0.8109  -0.8109 
[ 0][ 1]:  -1.6710  -1.6710 
[ 0][ 2]:  -0.0588  -0.0588 
[ 0][ 3]:   0.4996   0.4996 
[ 0][ 4]:  -1.0310  -1.0310 
[ 0][ 5]:  -0.8138  -0.8138 
[ 0][ 6]:   1.3327   1.3327 
[ 0][ 7]:  -0.1399  -0.1399 
[ 0][ 8]:   1.4545   1.4545 
[ 0][ 9]:   1.2027   1.2027 
[ 0][10]:  -1.1314  -1.1314 
[ 0][11]:   0.4770   0.4770 
[ 0][12]:  -0.8189  -0.8189 
[ 0][13]:  -0.1107  -0.1107 
[ 0][14]:   0.1430   0.1430 
[ 0][15]:  -1.3224  -1.3224 
[ 0][16]:  -0.4391  -0.4391 
[ 0][17]:   1.0958   1.0958 
[ 1][ 0]:  -0.6255  -0.6255 
[ 1][ 1]:   0.9036   0.9036 
[ 1][ 2]:   1.0707   1.0707 
[ 1][ 3]:  -1.5858  -1.5858 
[ 1][ 4]:  -0.6134  -0.6134 
[ 1][ 5]:  -1.1393  -1.1393 
[ 1][ 6]:  -0.4151  -0.4151 
[ 1][ 7]:   1.2992   1.2992 
[ 1][ 8]:   0.0000   0.0000 
[ 1][ 9]:   1.3745   1.3745 
[ 1][10]:  -1.6971  -1.6971 
[ 1][11]:   0.4770   0.4770 
[ 1][12]:   0.3372   0.3372 
[ 1][13]:  -1.1737  -1.1737 
[ 1][14]:  -1.9159  -1.9159 
[ 1][15]:   0.5724   0.5724 
[ 1][16]:   1.4010   1.4010 
[ 1][17]:  -1.3169  -1.3169 
[ 2][ 0]:   0.8572   0.8572 
[ 2][ 1]:  -1.2749  -1.2749 
[ 2][ 2]:   0.8825   0.8825 
[ 2][ 3]:  -0.7169  -0.7169 
[ 2][ 4]:  -0.6134  -0.6134 
[ 2][ 5]:   1.1393   1.1393 
[ 2][ 6]:  -1.1142  -1.1142 
[ 2][ 7]:  -0.7795  -0.7795 
[ 2][ 8]:  -0.1818  -0.1818 
[ 2][ 9]:  -0.3436  -0.3436 
[ 2][10]:   0.9428   0.9428 
[ 2][11]:   1.0756   1.0756 
[ 2][12]:  -1.9749  -1.9749 
[ 2][13]:   1.8381   1.8381 
[ 2][14]:  -0.3145  -0.3145 
[ 2][15]:  -0.8487  -0.8487 
[ 2][16]:  -1.2755  -1.2755 
[ 2][17]:  -1.6386  -1.6386 
[ 3][ 0]:   1.0426   1.0426 
[ 3][ 1]:  -0.0866  -0.0866 
[ 3][ 2]:   0.6942   0.6942 
[ 3][ 3]:   1.3686   1.3686 
[ 3][ 4]:   0.8483   0.8483 
[ 3][ 5]:  -1.1393  -1.1393 
[ 3][ 6]:   0.2840   0.2840 
[ 3][ 7]:  -1.5791  -1.5791 
[ 3][ 8]:  -1.2727  -1.2727 
[ 3][ 9]:   1.3745   1.3745 
[ 3][10]:  -1.1314  -1.1314 
[ 3][11]:   0.4770   0.4770 
[ 3][12]:   0.9152   0.9152 
[ 3][13]:  -0.8194  -0.8194 
[ 3][14]:   1.0580   1.0580 
[ 3][15]:   1.5198   1.5198 
[ 3][16]:   1.4010   1.4010 
[ 3][17]:   0.6132   0.6132 
[ 4][ 0]:   1.9693   1.9693 
[ 4][ 1]:   0.1114   0.1114 
[ 4][ 2]:  -2.1297  -2.1297 
[ 4][ 3]:   1.0210   1.0210 
[ 4][ 4]:  -0.4046  -0.4046 
[ 4][ 5]:  -0.3255  -0.3255 
[ 4][ 6]:  -0.2403  -0.2403 
[ 4][ 7]:   0.9794   0.9794 
[ 4][ 8]:  -1.6364  -1.6364 
[ 4][ 9]:   0.1718   0.1718 
[ 4][10]:   1.3199   1.3199 
[ 4][11]:  -1.0195  -1.0195 
[ 4][12]:   0.5299   0.5299 
[ 4][13]:  -0.8194  -0.8194 
[ 4][14]:   0.1430   0.1430 
[ 4][15]:  -1.1645  -1.1645 
[ 4][16]:  -0.7737  -0.7737 
[ 4][17]:   1.4175   1.4175 
[ 5][ 0]:   0.8572   0.8572 
[ 5][ 1]:  -0.6808  -0.6808 
[ 5][ 2]:  -0.2471  -0.2471 
[ 5][ 3]:  -1.0645  -1.0645 
[ 5][ 4]:   1.0571   1.0571 
[ 5][ 5]:   1.3021   1.3021 
[ 5][ 6]:  -1.1142  -1.1142 
[ 5][ 7]:   1.1393   1.1393 
[ 5][ 8]:   1.0909   1.0909 
[ 5][ 9]:   1.3745   1.3745 
[ 5][10]:   1.3199   1.3199 
[ 5][11]:  -1.3188  -1.3188 
[ 5][12]:  -0.8189  -0.8189 
[ 5][13]:   1.6609   1.6609 
[ 5][14]:   0.3717   0.3717 
[ 5][15]:  -0.2171  -0.2171 
[ 5][16]:   0.3973   0.3973 
[ 5][17]:  -0.0302  -0.0302 
[ 6][ 0]:  -1.5523  -1.5523 
[ 6][ 1]:  -1.6710  -1.6710 
[ 6][ 2]:   0.6942   0.6942 
[ 6][ 3]:  -0.0217  -0.0217 
[ 6][ 4]:  -0.6134  -0.6134 
[ 6][ 5]:  -0.9765  -0.9765 
[ 6][ 6]:   1.6823   1.6823 
[ 6][ 7]:   0.0200   0.0200 
[ 6][ 8]:   0.9091   0.9091 
[ 6][ 9]:   0.6873   0.6873 
[ 6][10]:   0.3771   0.3771 
[ 6][11]:   1.2253   1.2253 
[ 6][12]:  -1.7822  -1.7822 
[ 6][13]:   0.0664   0.0664 
[ 6][14]:   0.6005   0.6005 
[ 6][15]:   1.5198   1.5198 
[ 6][16]:   0.7319   0.7319 
[ 6][17]:   1.0958   1.0958 
[ 7][ 0]:   0.8572   0.8572 
[ 7][ 1]:   0.9036   0.9036 
[ 7][ 2]:  -0.6236  -0.6236 
[ 7][ 3]:  -1.0645  -1.0645 
[ 7][ 4]:   1.6836   1.6836 
[ 7][ 5]:  -1.3021  -1.3021 
[ 7][ 6]:   1.8571   1.8571 
[ 7][ 7]:   0.4997   0.4997 
[ 7][ 8]:  -0.9091  -0.9091 
[ 7][ 9]:  -1.3745  -1.3745 
[ 7][10]:   0.3771   0.3771 
[ 7][11]:   0.7763   0.7763 
[ 7][12]:   0.9152   0.9152 
[ 7][13]:   0.9523   0.9523 
[ 7][14]:  -0.0858  -0.0858 
[ 7][15]:  -1.1645  -1.1645 
[ 7][16]:   1.5683   1.5683 
[ 7][17]:   1.0958   1.0958 
[ 8][ 0]:   0.4865   0.4865 
[ 8][ 1]:   0.3094   0.3094 
[ 8][ 2]:   1.0707   1.0707 
[ 8][ 3]:   1.0210   1.0210 
[ 8][ 4]:   0.0131   0.0131 
[ 8][ 5]:   0.1628   0.1628 
[ 8][ 6]:  -0.7647  -0.7647 
[ 8][ 7]:   0.0200   0.0200 
[ 8][ 8]:  -1.2727  -1.2727 
[ 8][ 9]:  -0.3436  -0.3436 
[ 8][10]:   1.1314   1.1314 
[ 8][11]:  -1.6181  -1.6181 
[ 8][12]:  -0.6262  -0.6262 
[ 8][13]:  -0.6422  -0.6422 
[ 8][14]:   1.0580   1.0580 
[ 8][15]:   1.0461   1.0461 
[ 8][16]:  -1.4428  -1.4428 
[ 8][17]:  -0.5127  -0.5127 
[ 9][ 0]:   0.6719   0.6719 
[ 9][ 1]:   0.1114   0.1114 
[ 9][ 2]:  -0.2471  -0.2471 
[ 9][ 3]:  -0.1955  -0.1955 
[ 9][ 4]:  -0.6134  -0.6134 
[ 9][ 5]:   1.3021   1.3021 
[ 9][ 6]:  -0.2403  -0.2403 
[ 9][ 7]:  -1.7390  -1.7390 
[ 9][ 8]:   0.5455   0.5455 
[ 9][ 9]:  -0.8591  -0.8591 
[ 9][10]:  -1.1314  -1.1314 
[ 9][11]:   0.0281   0.0281 
[ 9][12]:  -0.0482  -0.0482 
[ 9][13]:   0.7751   0.7751 
[ 9][14]:  -1.0008  -1.0008 
[ 9][15]:  -1.1645  -1.1645 
[ 9][16]:   0.0627   0.0627 
[ 9][17]:   1.0958   1.0958 
[10][ 0]:  -0.8109  -0.8109 
[10][ 1]:   1.1016   1.1016 
[10][ 2]:   1.0707   1.0707 
[10][ 3]:  -1.0645  -1.0645 
[10][ 4]:  -0.4046  -0.4046 
[10][ 5]:  -0.9765  -0.9765 
[10][ 6]:  -0.7647  -0.7647 
[10][ 7]:   0.0200   0.0200 
[10][ 8]:  -0.1818  -0.1818 
[10][ 9]:  -1.5463  -1.5463 
[10][10]:  -0.5657  -0.5657 
[10][11]:  -1.4684  -1.4684 
[10][12]:   1.3005   1.3005 
[10][13]:   0.5979   0.5979 
[10][14]:   1.7443   1.7443 
[10][15]:   0.0987   0.0987 
[10][16]:  -0.9410  -0.9410 
[10][17]:  -0.6735  -0.6735 
[11][ 0]:  -1.1816  -1.1816 
[11][ 1]:  -0.0866  -0.0866 
[11][ 2]:   0.6942   0.6942 
[11][ 3]:   0.6734   0.6734 
[11][ 4]:  -1.6575  -1.6575 
[11][ 5]:   0.1628   0.1628 
[11][ 6]:  -1.2890  -1.2890 
[11][ 7]:  -0.2998  -0.2998 
[11][ 8]:  -0.5455  -0.5455 
[11][ 9]:   0.1718   0.1718 
[11][10]:  -0.1886  -0.1886 
[11][11]:  -1.6181  -1.6181 
[11][12]:   0.9152   0.9152 
[11][13]:  -0.1107  -0.1107 
[11][14]:  -1.9159  -1.9159 
[11][15]:  -0.2171  -0.2171 
[11][16]:   0.3973   0.3973 
[11][17]:  -0.3519  -0.3519 
[12][ 0]:  -1.3669  -1.3669 
[12][ 1]:   1.6958   1.6958 
[12][ 2]:  -1.9414  -1.9414 
[12][ 3]:   1.1948   1.1948 
[12][ 4]:   1.6836   1.6836 
[12][ 5]:  -0.6510  -0.6510 
[12][ 6]:   1.1579   1.1579 
[12][ 7]:   1.2992   1.2992 
[12][ 8]:   1.2727   1.2727 
[12][ 9]:  -1.0309  -1.0309 
[12][10]:   0.1886   0.1886 
[12][11]:   0.1777   0.1777 
[12][12]:  -0.4335  -0.4335 
[12][13]:  -1.1737  -1.1737 
[12][14]:  -0.0858  -0.0858 
[12][15]:   0.4145   0.4145 
[12][16]:  -0.9410  -0.9410 
[12][17]:  -0.0302  -0.0302 
[13][ 0]:   0.3012   0.3012 
[13][ 1]:   0.3094   0.3094 
[13][ 2]:   0.3177   0.3177 
[13][ 3]:   0.1521   0.1521 
[13][ 4]:  -1.0310  -1.0310 
[13][ 5]:   1.4648   1.4648 
[13][ 6]:  -0.4151  -0.4151 
[13][ 7]:  -1.5791  -1.5791 
[13][ 8]:   0.9091   0.9091 
[13][ 9]:  -1.3745  -1.3745 
[13][10]:   0.9428   0.9428 
[13][11]:   0.7763   0.7763 
[13][12]:  -0.4335  -0.4335 
[13][13]:  -1.5281  -1.5281 
[13][14]:   1.0580   1.0580 
[13][15]:   1.6777   1.6777 
[13][16]:   0.2300   0.2300 
[13][17]:   0.6132   0.6132 
[14][ 0]:  -0.8109  -0.8109 
[14][ 1]:   1.1016   1.1016 
[14][ 2]:  -0.0588  -0.0588 
[14][ 3]:  -1.4120  -1.4120 
[14][ 4]:   1.2659   1.2659 
[14][ 5]:   1.1393   1.1393 
[14][ 6]:  -0.5899  -0.5899 
[14][ 7]:   1.1393   1.1393 
[14][ 8]:   0.9091   0.9091 
[14][ 9]:   0.1718   0.1718 
[14][10]:   0.5657   0.5657 
[14][11]:   0.6267   0.6267 
[14][12]:   0.7225   0.7225 
[14][13]:   0.9523   0.9523 
[14][14]:  -0.0858  -0.0858 
[14][15]:  -0.5329  -0.5329 
[14][16]:  -1.2755  -1.2755 
[14][17]:  -1.4778  -1.4778 
[15][ 0]:   0.1158   0.1158 
[15][ 1]:  -1.0769  -1.0769 
[15][ 2]:  -1.1884  -1.1884 
[15][ 3]:   1.1948   1.1948 
[15][ 4]:   0.4307   0.4307 
[15][ 5]:   0.6510   0.6510 
[15][ 6]:   0.6336   0.6336 
[15][ 7]:  -0.2998  -0.2998 
[15][ 8]:  -1.0909  -1.0909 
[15][ 9]:   0.3436   0.3436 
[15][10]:  -1.3199  -1.3199 
[15][11]:   0.9260   0.9260 
[15][12]:   1.3005   1.3005 
[15][13]:  -0.4651  -0.4651 
[15][14]:  -0.7721  -0.7721 
[15][15]:  -0.2171  -0.2171 
[15][16]:   0.8992   0.8992 
[15][17]:  -0.9952  -0.9952 
#+END_SRC

* colnorm_print 15 18 4
Checks if colnorm_print on a matrix with 4 threads produces correct
output.

#+TESTY: program='./colnorm_print 15 18 4'
#+BEGIN_SRC sh
==== Matrix Column Normalization Print ====
rows: 15  cols: 18  threads: 4
Matrix:
15 x 18 matrix
   0:  -6.00  -9.00   1.00   2.00  -6.00  -5.00   6.00   0.00   9.00   6.00  -5.00   4.00  -3.00  -2.00   2.00 -10.00  -3.00   7.00 
   1:  -5.00   4.00   7.00 -10.00  -4.00  -7.00  -4.00   9.00   1.00   7.00  -8.00   4.00   3.00  -8.00  -7.00   2.00   8.00  -8.00 
   2:   3.00  -7.00   6.00  -5.00  -4.00   7.00  -8.00  -4.00   0.00  -3.00   6.00   8.00  -9.00   9.00   0.00  -7.00  -8.00 -10.00 
   3:   4.00  -1.00   5.00   7.00   3.00  -7.00   0.00  -9.00  -6.00   7.00  -5.00   4.00   6.00  -6.00   6.00   8.00   8.00   4.00 
   4:   9.00   0.00 -10.00   5.00  -3.00  -2.00  -3.00   7.00  -8.00   0.00   8.00  -6.00   4.00  -6.00   2.00  -9.00  -5.00   9.00 
   5:   3.00  -4.00   0.00  -7.00   4.00   8.00  -8.00   8.00   7.00   7.00   8.00  -8.00  -3.00   8.00   3.00  -3.00   2.00   0.00 
   6: -10.00  -9.00   5.00  -1.00  -4.00  -6.00   8.00   1.00   6.00   3.00   3.00   9.00  -8.00  -1.00   4.00   8.00   4.00   7.00 
   7:   3.00   4.00  -2.00  -7.00   7.00  -8.00   9.00   4.00  -4.00  -9.00   3.00   6.00   6.00   4.00   1.00  -9.00   9.00   7.00 
   8:   1.00   1.00   7.00   5.00  -1.00   1.00  -6.00   1.00  -6.00  -3.00   7.00 -10.00  -2.00  -5.00   6.00   5.00  -9.00  -3.00 
   9:   2.00   0.00   0.00  -2.00  -4.00   8.00  -3.00 -10.00   4.00  -6.00  -5.00   1.00   1.00   3.00  -3.00  -9.00   0.00   7.00 
  10:  -6.00   5.00   7.00  -7.00  -3.00  -6.00  -6.00   1.00   0.00 -10.00  -2.00  -9.00   8.00   2.00   9.00  -1.00  -6.00  -4.00 
  11:  -8.00  -1.00   5.00   3.00  -9.00   1.00  -9.00  -1.00  -2.00   0.00   0.00 -10.00   6.00  -2.00  -7.00  -3.00   2.00  -2.00 
  12:  -9.00   8.00  -9.00   6.00   7.00  -4.00   5.00   9.00   8.00  -7.00   2.00   2.00  -1.00  -8.00   1.00   1.00  -6.00   0.00 
  13:   0.00   1.00   3.00   0.00  -6.00   9.00  -4.00  -9.00   6.00  -9.00   6.00   6.00  -1.00 -10.00   6.00   9.00   1.00   4.00 
  14:  -6.00   5.00   1.00  -9.00   5.00   7.00  -5.00   8.00   6.00   0.00   4.00   5.00   5.00   4.00   1.00  -5.00  -8.00  -9.00 

========== avg ==========
[ i]:     BASE     OPTM
[ 0]:  -1.6667  -1.6667 
[ 1]:  -0.2000  -0.2000 
[ 2]:   1.7333   1.7333 
[ 3]:  -1.3333  -1.3333 
[ 4]:  -1.2000  -1.2000 
[ 5]:  -0.2667  -0.2667 
[ 6]:  -1.8667  -1.8667 
[ 7]:   1.0000   1.0000 
[ 8]:   1.4000   1.4000 
[ 9]:  -1.1333  -1.1333 
[10]:   1.4667   1.4667 
[11]:   0.4000   0.4000 
[12]:   0.8000   0.8000 
[13]:  -1.2000  -1.2000 
[14]:   1.6000   1.6000 
[15]:  -1.5333  -1.5333 
[16]:  -0.7333  -0.7333 
[17]:   0.6000   0.6000 
========== std ==========
[ i]:     BASE     OPTM
[ 0]:   5.5698   5.5698 
[ 1]:   5.0093   5.0093 
[ 2]:   5.2213   5.2213 
[ 3]:   5.6529   5.6529 
[ 4]:   4.9153   4.9153 
[ 5]:   6.2553   6.2553 
[ 6]:   5.8294   5.8294 
[ 7]:   6.4395   6.4395 
[ 8]:   5.4504   5.4504 
[ 9]:   5.9874   5.9874 
[10]:   5.1493   5.1493 
[11]:   6.7012   6.7012 
[12]:   5.0491   5.0491 
[13]:   5.7873   5.7873 
[14]:   4.4242   4.4242 
[15]:   6.5306   6.5306 
[16]:   6.0052   6.0052 
[17]:   6.2054   6.2054 
========== mat ==========
[ i][ j]:     BASE     OPTM
[ 0][ 0]:  -0.7780  -0.7780 
[ 0][ 1]:  -1.7567  -1.7567 
[ 0][ 2]:  -0.1404  -0.1404 
[ 0][ 3]:   0.5897   0.5897 
[ 0][ 4]:  -0.9765  -0.9765 
[ 0][ 5]:  -0.7567  -0.7567 
[ 0][ 6]:   1.3495   1.3495 
[ 0][ 7]:  -0.1553  -0.1553 
[ 0][ 8]:   1.3944   1.3944 
[ 0][ 9]:   1.1914   1.1914 
[ 0][10]:  -1.2558  -1.2558 
[ 0][11]:   0.5372   0.5372 
[ 0][12]:  -0.7526  -0.7526 
[ 0][13]:  -0.1382  -0.1382 
[ 0][14]:   0.0904   0.0904 
[ 0][15]:  -1.2965  -1.2965 
[ 0][16]:  -0.3775  -0.3775 
[ 0][17]:   1.0314   1.0314 
[ 1][ 0]:  -0.5985  -0.5985 
[ 1][ 1]:   0.8384   0.8384 
[ 1][ 2]:   1.0087   1.0087 
[ 1][ 3]:  -1.5331  -1.5331 
[ 1][ 4]:  -0.5697  -0.5697 
[ 1][ 5]:  -1.0764  -1.0764 
[ 1][ 6]:  -0.3660  -0.3660 
[ 1][ 7]:   1.2423   1.2423 
[ 1][ 8]:  -0.0734  -0.0734 
[ 1][ 9]:   1.3584   1.3584 
[ 1][10]:  -1.8384  -1.8384 
[ 1][11]:   0.5372   0.5372 
[ 1][12]:   0.4357   0.4357 
[ 1][13]:  -1.1750  -1.1750 
[ 1][14]:  -1.9439  -1.9439 
[ 1][15]:   0.5410   0.5410 
[ 1][16]:   1.4543   1.4543 
[ 1][17]:  -1.3859  -1.3859 
[ 2][ 0]:   0.8379   0.8379 
[ 2][ 1]:  -1.3575  -1.3575 
[ 2][ 2]:   0.8172   0.8172 
[ 2][ 3]:  -0.6486  -0.6486 
[ 2][ 4]:  -0.5697  -0.5697 
[ 2][ 5]:   1.1617   1.1617 
[ 2][ 6]:  -1.0521  -1.0521 
[ 2][ 7]:  -0.7765  -0.7765 
[ 2][ 8]:  -0.2569  -0.2569 
[ 2][ 9]:  -0.3118  -0.3118 
[ 2][10]:   0.8804   0.8804 
[ 2][11]:   1.1341   1.1341 
[ 2][12]:  -1.9409  -1.9409 
[ 2][13]:   1.7625   1.7625 
[ 2][14]:  -0.3616  -0.3616 
[ 2][15]:  -0.8371  -0.8371 
[ 2][16]:  -1.2101  -1.2101 
[ 2][17]:  -1.7082  -1.7082 
[ 3][ 0]:   1.0174   1.0174 
[ 3][ 1]:  -0.1597  -0.1597 
[ 3][ 2]:   0.6256   0.6256 
[ 3][ 3]:   1.4742   1.4742 
[ 3][ 4]:   0.8545   0.8545 
[ 3][ 5]:  -1.0764  -1.0764 
[ 3][ 6]:   0.3202   0.3202 
[ 3][ 7]:  -1.5529  -1.5529 
[ 3][ 8]:  -1.3577  -1.3577 
[ 3][ 9]:   1.3584   1.3584 
[ 3][10]:  -1.2558  -1.2558 
[ 3][11]:   0.5372   0.5372 
[ 3][12]:   1.0299   1.0299 
[ 3][13]:  -0.8294  -0.8294 
[ 3][14]:   0.9945   0.9945 
[ 3][15]:   1.4598   1.4598 
[ 3][16]:   1.4543   1.4543 
[ 3][17]:   0.5479   0.5479 
[ 4][ 0]:   1.9151   1.9151 
[ 4][ 1]:   0.0399   0.0399 
[ 4][ 2]:  -2.2472  -2.2472 
[ 4][ 3]:   1.1204   1.1204 
[ 4][ 4]:  -0.3662  -0.3662 
[ 4][ 5]:  -0.2771  -0.2771 
[ 4][ 6]:  -0.1944  -0.1944 
[ 4][ 7]:   0.9318   0.9318 
[ 4][ 8]:  -1.7246  -1.7246 
[ 4][ 9]:   0.1893   0.1893 
[ 4][10]:   1.2688   1.2688 
[ 4][11]:  -0.9550  -0.9550 
[ 4][12]:   0.6338   0.6338 
[ 4][13]:  -0.8294  -0.8294 
[ 4][14]:   0.0904   0.0904 
[ 4][15]:  -1.1433  -1.1433 
[ 4][16]:  -0.7105  -0.7105 
[ 4][17]:   1.3537   1.3537 
[ 5][ 0]:   0.8379   0.8379 
[ 5][ 1]:  -0.7586  -0.7586 
[ 5][ 2]:  -0.3320  -0.3320 
[ 5][ 3]:  -1.0024  -1.0024 
[ 5][ 4]:   1.0579   1.0579 
[ 5][ 5]:   1.3215   1.3215 
[ 5][ 6]:  -1.0521  -1.0521 
[ 5][ 7]:   1.0870   1.0870 
[ 5][ 8]:   1.0275   1.0275 
[ 5][ 9]:   1.3584   1.3584 
[ 5][10]:   1.2688   1.2688 
[ 5][11]:  -1.2535  -1.2535 
[ 5][12]:  -0.7526  -0.7526 
[ 5][13]:   1.5897   1.5897 
[ 5][14]:   0.3164   0.3164 
[ 5][15]:  -0.2246  -0.2246 
[ 5][16]:   0.4552   0.4552 
[ 5][17]:  -0.0967  -0.0967 
[ 6][ 0]:  -1.4962  -1.4962 
[ 6][ 1]:  -1.7567  -1.7567 
[ 6][ 2]:   0.6256   0.6256 
[ 6][ 3]:   0.0590   0.0590 
[ 6][ 4]:  -0.5697  -0.5697 
[ 6][ 5]:  -0.9166  -0.9166 
[ 6][ 6]:   1.6926   1.6926 
[ 6][ 7]:   0.0000   0.0000 
[ 6][ 8]:   0.8440   0.8440 
[ 6][ 9]:   0.6903   0.6903 
[ 6][10]:   0.2978   0.2978 
[ 6][11]:   1.2833   1.2833 
[ 6][12]:  -1.7429  -1.7429 
[ 6][13]:   0.0346   0.0346 
[ 6][14]:   0.5425   0.5425 
[ 6][15]:   1.4598   1.4598 
[ 6][16]:   0.7882   0.7882 
[ 6][17]:   1.0314   1.0314 
[ 7][ 0]:   0.8379   0.8379 
[ 7][ 1]:   0.8384   0.8384 
[ 7][ 2]:  -0.7150  -0.7150 
[ 7][ 3]:  -1.0024  -1.0024 
[ 7][ 4]:   1.6683   1.6683 
[ 7][ 5]:  -1.2363  -1.2363 
[ 7][ 6]:   1.8641   1.8641 
[ 7][ 7]:   0.4659   0.4659 
[ 7][ 8]:  -0.9908  -0.9908 
[ 7][ 9]:  -1.3139  -1.3139 
[ 7][10]:   0.2978   0.2978 
[ 7][11]:   0.8357   0.8357 
[ 7][12]:   1.0299   1.0299 
[ 7][13]:   0.8985   0.8985 
[ 7][14]:  -0.1356  -0.1356 
[ 7][15]:  -1.1433  -1.1433 
[ 7][16]:   1.6208   1.6208 
[ 7][17]:   1.0314   1.0314 
[ 8][ 0]:   0.4788   0.4788 
[ 8][ 1]:   0.2396   0.2396 
[ 8][ 2]:   1.0087   1.0087 
[ 8][ 3]:   1.1204   1.1204 
[ 8][ 4]:   0.0407   0.0407 
[ 8][ 5]:   0.2025   0.2025 
[ 8][ 6]:  -0.7090  -0.7090 
[ 8][ 7]:   0.0000   0.0000 
[ 8][ 8]:  -1.3577  -1.3577 
[ 8][ 9]:  -0.3118  -0.3118 
[ 8][10]:   1.0746   1.0746 
[ 8][11]:  -1.5520  -1.5520 
[ 8][12]:  -0.5546  -0.5546 
[ 8][13]:  -0.6566  -0.6566 
[ 8][14]:   0.9945   0.9945 
[ 8][15]:   1.0004   1.0004 
[ 8][16]:  -1.3766  -1.3766 
[ 8][17]:  -0.5801  -0.5801 
[ 9][ 0]:   0.6583   0.6583 
[ 9][ 1]:   0.0399   0.0399 
[ 9][ 2]:  -0.3320  -0.3320 
[ 9][ 3]:  -0.1179  -0.1179 
[ 9][ 4]:  -0.5697  -0.5697 
[ 9][ 5]:   1.3215   1.3215 
[ 9][ 6]:  -0.1944  -0.1944 
[ 9][ 7]:  -1.7082  -1.7082 
[ 9][ 8]:   0.4770   0.4770 
[ 9][ 9]:  -0.8128  -0.8128 
[ 9][10]:  -1.2558  -1.2558 
[ 9][11]:   0.0895   0.0895 
[ 9][12]:   0.0396   0.0396 
[ 9][13]:   0.7257   0.7257 
[ 9][14]:  -1.0397  -1.0397 
[ 9][15]:  -1.1433  -1.1433 
[ 9][16]:   0.1221   0.1221 
[ 9][17]:   1.0314   1.0314 
[10][ 0]:  -0.7780  -0.7780 
[10][ 1]:   1.0381   1.0381 
[10][ 2]:   1.0087   1.0087 
[10][ 3]:  -1.0024  -1.0024 
[10][ 4]:  -0.3662  -0.3662 
[10][ 5]:  -0.9166  -0.9166 
[10][ 6]:  -0.7090  -0.7090 
[10][ 7]:   0.0000   0.0000 
[10][ 8]:  -0.2569  -0.2569 
[10][ 9]:  -1.4809  -1.4809 
[10][10]:  -0.6732  -0.6732 
[10][11]:  -1.4027  -1.4027 
[10][12]:   1.4260   1.4260 
[10][13]:   0.5529   0.5529 
[10][14]:   1.6726   1.6726 
[10][15]:   0.0817   0.0817 
[10][16]:  -0.8770  -0.8770 
[10][17]:  -0.7413  -0.7413 
[11][ 0]:  -1.1371  -1.1371 
[11][ 1]:  -0.1597  -0.1597 
[11][ 2]:   0.6256   0.6256 
[11][ 3]:   0.7666   0.7666 
[11][ 4]:  -1.5869  -1.5869 
[11][ 5]:   0.2025   0.2025 
[11][ 6]:  -1.2237  -1.2237 
[11][ 7]:  -0.3106  -0.3106 
[11][ 8]:  -0.6238  -0.6238 
[11][ 9]:   0.1893   0.1893 
[11][10]:  -0.2848  -0.2848 
[11][11]:  -1.5520  -1.5520 
[11][12]:   1.0299   1.0299 
[11][13]:  -0.1382  -0.1382 
[11][14]:  -1.9439  -1.9439 
[11][15]:  -0.2246  -0.2246 
[11][16]:   0.4552   0.4552 
[11][17]:  -0.4190  -0.4190 
[12][ 0]:  -1.3166  -1.3166 
[12][ 1]:   1.6369   1.6369 
[12][ 2]:  -2.0557  -2.0557 
[12][ 3]:   1.2973   1.2973 
[12][ 4]:   1.6683   1.6683 
[12][ 5]:  -0.5968  -0.5968 
[12][ 6]:   1.1779   1.1779 
[12][ 7]:   1.2423   1.2423 
[12][ 8]:   1.2109   1.2109 
[12][ 9]:  -0.9798  -0.9798 
[12][10]:   0.1036   0.1036 
[12][11]:   0.2388   0.2388 
[12][12]:  -0.3565  -0.3565 
[12][13]:  -1.1750  -1.1750 
[12][14]:  -0.1356  -0.1356 
[12][15]:   0.3879   0.3879 
[12][16]:  -0.8770  -0.8770 
[12][17]:  -0.0967  -0.0967 
[13][ 0]:   0.2992   0.2992 
[13][ 1]:   0.2396   0.2396 
[13][ 2]:   0.2426   0.2426 
[13][ 3]:   0.2359   0.2359 
[13][ 4]:  -0.9765  -0.9765 
[13][ 5]:   1.4814   1.4814 
[13][ 6]:  -0.3660  -0.3660 
[13][ 7]:  -1.5529  -1.5529 
[13][ 8]:   0.8440   0.8440 
[13][ 9]:  -1.3139  -1.3139 
[13][10]:   0.8804   0.8804 
[13][11]:   0.8357   0.8357 
[13][12]:  -0.3565  -0.3565 
[13][13]:  -1.5206  -1.5206 
[13][14]:   0.9945   0.9945 
[13][15]:   1.6129   1.6129 
[13][16]:   0.2886   0.2886 
[13][17]:   0.5479   0.5479 
[14][ 0]:  -0.7780  -0.7780 
[14][ 1]:   1.0381   1.0381 
[14][ 2]:  -0.1404  -0.1404 
[14][ 3]:  -1.3562  -1.3562 
[14][ 4]:   1.2614   1.2614 
[14][ 5]:   1.1617   1.1617 
[14][ 6]:  -0.5375  -0.5375 
[14][ 7]:   1.0870   1.0870 
[14][ 8]:   0.8440   0.8440 
[14][ 9]:   0.1893   0.1893 
[14][10]:   0.4920   0.4920 
[14][11]:   0.6864   0.6864 
[14][12]:   0.8318   0.8318 
[14][13]:   0.8985   0.8985 
[14][14]:  -0.1356  -0.1356 
[14][15]:  -0.5308  -0.5308 
[14][16]:  -1.2101  -1.2101 
[14][17]:  -1.5470  -1.5470 
#+END_SRC

* colnorm_benchmark valgrind
** Valgrind Run
Checks whether colnorm_benchmark has memory problems
#+TESTY: program="./colnorm_benchmark -test"
#+TESTY: skip_diff=1
# extend the timeout to 15 seconds
#+TESTY: timeout=15
#+BEGIN_SRC sh
WARNING: expected host like 'grace9.umd.edu' but got host 'val'
WARNING: ensure you are on an ODD grace node
WARNING: timing results / scoring will not reflect actual scoring
WARNING: run on one of the following hosts for accurate results
WARNING:   grace3.umd.edu
WARNING:   grace5.umd.edu
WARNING:   grace7.umd.edu
WARNING:   grace9.umd.edu
WARNING: while on grace, try `ssh grace5` to log into a specifc node
==== Matrix Column Normalization Benchmark Version 1 ====
------ Tuned for ODD grace.umd.edu machines -----
Running with REPEATS: 1 and WARMUP: 1
Running with 3 sizes and 4 thread_counts (max 4)
  ROWS   COLS   BASE  T   OPTM SPDUP POINT TOTAL 
   105    211  0.003  1  0.006  0.55  0.00  0.00 
                      2  0.004  0.78  0.00  0.00 
                      3  0.005  0.71  0.00  0.00 
                      4  0.005  0.66  0.00  0.00 
   258    516  0.019  1  0.024  0.79  0.00  0.00 
                      2  0.030  0.62  0.00  0.00 
                      3  0.023  0.81  0.00  0.00 
                      4  0.026  0.73  0.00  0.00 
   511   1021  0.072  1  0.094  0.77  0.00  0.00 
                      2  0.098  0.73  0.00  0.00 
                      3  0.100  0.73  0.00  0.00 
                      4  0.089  0.82  0.00  0.00 
RAW POINTS: 0.00
TOTAL POINTS: 0 / 35
WARNING: expected host like 'grace9.umd.edu' but got host 'val'
WARNING: ensure you are on an ODD grace node
WARNING: timing results / scoring will not reflect actual scoring
WARNING: run on one of the following hosts for accurate results
WARNING:   grace3.umd.edu
WARNING:   grace5.umd.edu
WARNING:   grace7.umd.edu
WARNING:   grace9.umd.edu
WARNING: while on grace, try `ssh grace5` to log into a specifc node
#+END_SRC

** Error Output
Then checks to ensure that benchmark doesn't have any errors in it.
# test should default to use bash shell
#+TESTY: use_valgrind=0
#+BEGIN_SRC sh
>> outfile=test-results/testout.txt
>> ./colnorm_benchmark -test > $outfile
>> if grep -q ERROR $outfile; then cat $outfile; fi
>> echo Done
Done
#+END_SRC

